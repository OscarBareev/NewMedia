package ru.netology.nmedia.repository

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import ru.netology.nmedia.dto.Post

class PostRepositoryImpl : PostRepository {

    private var nextId = 1L
    private var posts = listOf(
        Post(
            id = nextId++,
            author = "1Нетология. Университет интернет профессий будущего",
            content = "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке, аналитике, и управлению. Мы растем сами и помогаем расти студентам: от новичков, до уверенных профессионалов. Но самое важное остается с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше бежать быстрее. Наша миссия - помочь встать на путь роста и начать цепочку перемен -> http://netolo.gy/fyb.",
            published = "21 мая в 18:36",
            likedByMe = false,
            likesCount = 1099,
            shareCount = 999_999
        ),
        Post(
            id = nextId++,
            author = "2Нетология. Университет интернет профессий будущего",
            content = "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке, аналитике, и управлению. Мы растем сами и помогаем расти студентам: от новичков, до уверенных профессионалов. Но самое важное остается с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше бежать быстрее. Наша миссия - помочь встать на путь роста и начать цепочку перемен -> http://netolo.gy/fyb.",
            published = "21 мая в 18:36",
            likedByMe = false,
            likesCount = 5,
            shareCount = 10,
            video = "https://www.youtube.com/watch?v=WhWc3b3KhnY"
        ),
        Post(
            id = nextId++,
            author = "3Нетология. Университет интернет профессий будущего",
            content = "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке, аналитике, и управлению. Мы растем сами и помогаем расти студентам: от новичков, до уверенных профессионалов. Но самое важное остается с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше бежать быстрее. Наша миссия - помочь встать на путь роста и начать цепочку перемен -> http://netolo.gy/fyb.",
            published = "21 мая в 18:36",
            likedByMe = false,
            likesCount = 1,
            shareCount = 100
        ),
        Post(
            id = nextId++,
            author = "4Нетология. Университет интернет профессий будущего",
            content = "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке, аналитике, и управлению. Мы растем сами и помогаем расти студентам: от новичков, до уверенных профессионалов. Но самое важное остается с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше бежать быстрее. Наша миссия - помочь встать на путь роста и начать цепочку перемен -> http://netolo.gy/fyb.",
            published = "21 мая в 18:36",
            likedByMe = false,
            likesCount = 1,
            shareCount = 100,
            video = "https://www.youtube.com/watch?v=mvmHfp-YtCo&t=81s"
        ),
        Post(
            id = nextId++,
            author = "5Нетология. Университет интернет профессий будущего",
            content = "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке, аналитике, и управлению. Мы растем сами и помогаем расти студентам: от новичков, до уверенных профессионалов. Но самое важное остается с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше бежать быстрее. Наша миссия - помочь встать на путь роста и начать цепочку перемен -> http://netolo.gy/fyb.",
            published = "21 мая в 18:36",
            likedByMe = false,
            likesCount = 1,
            shareCount = 100
        ),
        Post(
            id = nextId++,
            author = "6Нетология. Университет интернет профессий будущего",
            content = "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке, аналитике, и управлению. Мы растем сами и помогаем расти студентам: от новичков, до уверенных профессионалов. Но самое важное остается с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше бежать быстрее. Наша миссия - помочь встать на путь роста и начать цепочку перемен -> http://netolo.gy/fyb.",
            published = "21 мая в 18:36",
            likedByMe = false,
            likesCount = 45,
            shareCount = 76,
            video = "https://www.youtube.com/watch?v=WhWc3b3KhnY"
        ),
        Post(
            id = nextId++,
            author = "6Нетология. Университет интернет профессий будущего",
            content = "Привет, это новая Нетология! Когда-то Нетология начиналась с интенсивов по онлайн-маркетингу. Затем появились курсы по дизайну, разработке, аналитике, и управлению. Мы растем сами и помогаем расти студентам: от новичков, до уверенных профессионалов. Но самое важное остается с нами: мы верим, что в каждом уже есть сила, которая заставляет хотеть больше, целиться выше бежать быстрее. Наша миссия - помочь встать на путь роста и начать цепочку перемен -> http://netolo.gy/fyb.",
            published = "21 мая в 18:36",
            likedByMe = false,
            likesCount = 234,
            shareCount = 999
        )
    ).reversed()


    private val data = MutableLiveData(posts)

    override fun getAll(): LiveData<List<Post>> = data

    override fun likeById(id: Long) {
        posts = posts.map {
            if (it.id != id) {
                it
            } else {
                val count = if (it.likedByMe) it.likesCount - 1 else it.likesCount + 1
                it.copy(likedByMe = !it.likedByMe, likesCount = count)
            }
        }


        data.value = posts
    }

    override fun shareById(id: Long) {
        posts = posts.map {
            if (it.id != id) {
                it
            } else {
                val count = it.shareCount + 1
                it.copy(shareCount = count)
            }
        }
        data.value = posts
    }

    override fun removeById(id: Long) {
        posts = posts.filter { it.id != id }
        data.value = posts
    }


    override fun save(post: Post) {
        if (post.id == 0L) {
            posts = listOf(
                post.copy(
                    id = nextId++,
                    author = "Me",
                    likedByMe = false,
                    published = "now"
                )
            ) + posts
            data.value = posts
            return
        }


        posts = posts.map {
            if (it.id != post.id) it else it.copy(content = post.content)
        }

        data.value = posts

    }

}